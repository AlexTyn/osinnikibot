import telebot
from telebot import types
from math import sqrt
bot = telebot.TeleBot("945523593:AAHo-tnht2m8i_-lR7qMQtxe_Dl6MOhwmG8")
words = {
"why": ["–ø–æ—á–µ–º—É", "–ø–æ—á–µ–º—É?"],
"hello": ["–ø—Ä–∏–≤–µ—Ç", "—Ö–∞–π", "—Ö–µ–π", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "–∑–¥–∞—Ä–æ–≤–∞"],
"creators": ["—Å–æ–∑–¥–∞—Ç–µ–ª–∏", "—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏", "—Å–æ–∑–¥–∞—Ç–µ–ª—å", "—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"]
}
@bot.message_handler(content_types = ["text"])
def hello(message):
	i = 0
	if message.text.lower() == "/start":
		i = 1
		bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç)")
		keyboard1 = types.InlineKeyboardMarkup()
		yes_key = types.InlineKeyboardButton(text = "–ê–≥–∞", callback_data = "yes")
		no_key = types.InlineKeyboardButton(text = "–ù–µ-–∞", callback_data = "no")
		keyboard1.add(yes_key, no_key)
		bot.send_message(message.from_user.id, "–•–æ—á–µ—à—å –ø—Ä–æ–π—Ç–∏ –∫–≤–µ—Å—Ç?", reply_markup = keyboard1)
	elif i == 0:
		bot.send_message(message.from_user.id, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å ;(")
	for word in words["hello"]:
		if message.text.lower() == word:
			i = 1
			bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç)")
			keyboard1 = types.InlineKeyboardMarkup()
			yes_key = types.InlineKeyboardButton(text = "–ê–≥–∞", callback_data = "yes")
			no_key = types.InlineKeyboardButton(text = "–ù–µ-–∞", callback_data = "no")
			keyboard1.add(yes_key, no_key)
			bot.send_message(message.from_user.id, "–•–æ—á–µ—à—å –ø—Ä–æ–π—Ç–∏ –∫–≤–µ—Å—Ç?", reply_markup = keyboard1)
	for word in words["creators"]:
		if message.text.lower() == word:
			i = 1
			bot.send_message(message.from_user.id, "https://t.me/alextyn\nhttps://t.me/SlavaRusWarrior")
	for word in words["why"]:
		if message.text.lower() == word:
			i = 1
			bot.send_message(message.from_user.id, "–ù—É –∞ —Ö–ª–µ")
	if message.text.lower() == "–∂–∏–∑–Ω—å":
			i = 1
			bot.send_message(message.from_user.id, "- –±–æ–ª—å")
@bot.callback_query_handler(func= lambda call: True)
def callback_worker(call):
	if call.data == "yes":
		keyboard2 = types.InlineKeyboardMarkup()
		city1_key = types.InlineKeyboardButton(text = "–û—Å–∏–Ω–Ω–∏–∫–∏", callback_data = "Osinniki")
		city2_key = types.InlineKeyboardButton(text = "–ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫", callback_data = "Novokuznetsk")
		city3_key = types.InlineKeyboardButton(text = "–ö–µ–º–µ—Ä–æ–≤–æ", callback_data = "Kemerovo")
		city4_key = types.InlineKeyboardButton(text = "???", callback_data = "a")
		keyboard2.add(city1_key, city2_key, city3_key, city4_key)
		bot.send_message(call.message.chat.id, "–¢–æ–≥–¥–∞ –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞", reply_markup = keyboard2)
	elif call.data == "no":
		bot.send_message(call.message.chat.id, '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è, –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤ :D')
	elif call.data == "Osinniki":
		bot.answer_callback_query(call.id, text = "–ì–æ—Ä–æ–¥ –≤—ã–±—Ä–∞–Ω")
		keyboard = types.ReplyKeyboardMarkup(True)
		button_geo = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
		keyboard.add(button_geo)
		bot.send_message(call.message.chat.id, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–± —è –Ω–∞—à–µ–ª –±–ª–∏–∂–∞–π—à—É—é –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Ç–æ—á–∫—É :D", reply_markup=keyboard)
	elif call.data == "Novokuznetsk":
		bot.answer_callback_query(call.id, text = "–ì–æ—Ä–æ–¥ –≤—ã–±—Ä–∞–Ω")
		bot.send_message(call.message.chat.id, "Coming soon..")
	elif call.data == "Kemerovo":
		bot.answer_callback_query(call.id, text = "–ì–æ—Ä–æ–¥ –≤—ã–±—Ä–∞–Ω")
		bot.send_message(call.message.chat.id, "Coming soon..")
	elif call.data == "a":
		bot.answer_callback_query(call.id, text = "–ì–æ—Ä–æ–¥ –≤—ã–±—Ä–∞–Ω")
		bot.send_message(call.message.chat.id, "Coming soon..")
@bot.message_handler(content_types=["location"])
def location(message):
	osinniki = [53.577475, 53.658998, 87.277901, 87.451449]
	lenin = [53.598598, 87.338041]
	lion = [53.598330, 87.330634]
	pandf = [53.600084, 87.337079]
	if osinniki[0] < message.location.latitude and message.location.latitude < osinniki[1] and osinniki[2] < message.location.longitude and message.location.longitude < osinniki[3]:
		latitude1 = abs(lenin[0] - message.location.latitude) * 111135
		latitude2 = abs(lion[0] - message.location.latitude) * 111135
		latitude3 = abs(pandf[0] - message.location.latitude) * 111135
		longitude1 = abs(lenin[1] - message.location.longitude) * 111321
		longitude2 = abs(lion[1] - message.location.longitude) * 111321
		longitude3 = abs(pandf[1] - message.location.longitude) * 111321
		distance1 = round(sqrt(latitude1**2 + longitude1**2))
		distance2 = round(sqrt(latitude2**2 + longitude2**2))
		distance3 = round(sqrt(latitude3**2 + longitude3**2))
		if distance1 < 20:
			bot.send_message(message.from_user.id, "–û—Ç–ª–∏—á–Ω–æ!\n–¢—ã –¥–æ—à—ë–ª –¥–æ –ü–∞–º—è—Ç–Ω–∏–∫–∞ –í.–ò.–õ–µ–Ω–∏–Ω—É :D")
			keyboard3 = types.InlineKeyboardMarkup()
			url_button = types.InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å", url="https://t.me/addstickers/membitch")
			keyboard3.add(url_button)
			bot.send_message(message.from_user.id, "–¢–≤–æ–π –ø—Ä–∏–∑ - 1 —á–∞—Å—Ç—å –Ω–∞—à–µ–≥–æ –Ω–∞–±–æ—Ä–∞ —Å—Ç–∏–∫–µ—Ä–æ–≤üéâ", reply_markup=keyboard3)
			bot.send_message(message.from_user.id, "‚úÖ–ü–∞–º—è—Ç–Ω–∏–∫ –í.–ò.–õ–µ–Ω–∏–Ω—É - " + str(distance1) + " –º" + "\n–§–æ–Ω—Ç–∞–Ω \"–õ–µ–≤\" - " + str(distance2) + " –º" + "\n–ü–∞–º—è—Ç–Ω–∏–∫ –ü–µ—Ç—Ä—É –∏ –§–µ–≤—Ä–æ–Ω–∏–∏ - " + str(distance3) + " –º")
			bot.send_message(message.from_user.id, "–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—É—Ç—å, —á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å –≤–µ—Å—å —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ :3")
		elif distance2 < 20:
			bot.send_message(message.from_user.id, "–û—Ç–ª–∏—á–Ω–æ!\n–¢—ã –æ–∫–æ–ª–æ –§–æ–Ω—Ç–∞–Ω–∞ \"–õ–µ–≤\" :D")
			keyboard3 = types.InlineKeyboardMarkup()
			url_button = types.InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å", url="https://t.me/addstickers/PresidentPutin")
			keyboard3.add(url_button)
			bot.send_message(message.from_user.id, "–¢–≤–æ–π –ø—Ä–∏–∑ - 2 —á–∞—Å—Ç—å –Ω–∞—à–µ–≥–æ –Ω–∞–±–æ—Ä–∞ —Å—Ç–∏–∫–µ—Ä–æ–≤üéâ", reply_markup=keyboard3)
			bot.send_message(message.from_user.id, "–ü–∞–º—è—Ç–Ω–∏–∫ –í.–ò.–õ–µ–Ω–∏–Ω—É - " + str(distance1) + " –º" + "\n‚úÖ–§–æ–Ω—Ç–∞–Ω \"–õ–µ–≤\" - " + str(distance2) + " –º" + "\n–ü–∞–º—è—Ç–Ω–∏–∫ –ü–µ—Ç—Ä—É –∏ –§–µ–≤—Ä–æ–Ω–∏–∏ - " + str(distance3) + " –º")
			bot.send_message(message.from_user.id, "–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—É—Ç—å, —á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å –≤–µ—Å—å —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ :3")
		elif distance3 < 20:
			bot.send_message(message.from_user.id, "–û—Ç–ª–∏—á–Ω–æ!\n–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –æ–∫–æ–ª–æ –ü–∞–º—è—Ç–Ω–∏–∫–∞ –ü–µ—Ç—Ä—É –∏ –§–µ–≤—Ä–æ–Ω–∏–∏ üëå")
			keyboard3 = types.InlineKeyboardMarkup()
			url_button = types.InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å", url="https://t.me/addstickers/HotCherry")
			keyboard3.add(url_button)
			bot.send_message(message.from_user.id, "–¢–≤–æ–π –ø—Ä–∏–∑ - 3 —á–∞—Å—Ç—å –Ω–∞—à–µ–≥–æ –Ω–∞–±–æ—Ä–∞ —Å—Ç–∏–∫–µ—Ä–æ–≤üéâ", reply_markup=keyboard3)
			bot.send_message(message.from_user.id, "–ë—É–¥—É –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω, –µ—Å–ª–∏ —Ç—ã —Ä–∞—Å—Å–∫–∞–∂–µ—à—å –æ –∫–≤–µ—Å—Ç–µ —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–ºüòÉ")
			bot.send_message(message.from_user.id, "–ú–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏üòä\nhttps://t.me/alextyn\nhttps://t.me/SlavaRusWarrior")
			bot.send_message(message.from_user.id, "–ü–∞–º—è—Ç–Ω–∏–∫ –í.–ò.–õ–µ–Ω–∏–Ω—É - " + str(distance1) + " –º" + "\n–§–æ–Ω—Ç–∞–Ω \"–õ–µ–≤\" - " + str(distance2) + " –º" + "\n‚úÖ–ü–∞–º—è—Ç–Ω–∏–∫ –ü–µ—Ç—Ä—É –∏ –§–µ–≤—Ä–æ–Ω–∏–∏ - " + str(distance3) + " –º")
			bot.send_message(message.from_user.id, "–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—É—Ç—å, —á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å –≤–µ—Å—å —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ :3")
		else:
			bot.send_message(message.from_user.id, "–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –¥–æ –Ω–∏—Ö.\n\n–ü–∞–º—è—Ç–Ω–∏–∫ –í.–ò.–õ–µ–Ω–∏–Ω—É - " + str(distance1) + " –º" + "\n–§–æ–Ω—Ç–∞–Ω \"–õ–µ–≤\" - " + str(distance2) + " –º" + "\n–ü–∞–º—è—Ç–Ω–∏–∫ –ü–µ—Ç—Ä—É –∏ –§–µ–≤—Ä–æ–Ω–∏–∏ - " + str(distance3) + " –º")
			keyboard = types.ReplyKeyboardMarkup(True, True)
			button_geo = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
			keyboard.add(button_geo)
			bot.send_message(message.from_user.id, "–ö–æ–≥–¥–∞ –±—É–¥–µ—à—å –æ–∫–æ–ª–æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É", reply_markup=keyboard)
	else:
		bot.send_message(message.from_user.id, "–ü—Ä–æ—Å—Ç–∏, –Ω–æ —è –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é —Ç–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞ :(")
bot.polling()
